trigger:
  branches:
    include:
      - main
  paths:
    include:
      - azure_functions/support/*
    exclude:
      - azure_functions/support/env-support-utils.yml
      - azure_functions/support/*.yaml


resources:
  repositories:
    - repository: pipeline
      type: git
      name: platform-azdo-pipeline
      ref: main

parameters: 
- name: deploymentStages
  type: object
  default: 
  - name: 'D01'
    envName: dev
    coreEnv: d01
    subscription: nonprod
    smartGroupName: smart-dev
    dependsOn: ['build']
    condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/main'))

  - name: 'T01'
    envName: test
    coreEnv: t01
    subscription: nonprod
    smartGroupName: smart-test
    dependsOn: ['build']
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

  - name: 'P01'
    envName: pat
    coreEnv: pat
    subscription: nonprod
    smartGroupName: smart-prod
    dependsOn: ['build', 'T01_Deploy_UKS']
    condition: succeeded()

  - name: 'PROD'
    envName: prod
    coreEnv: prod
    subscription: prod
    smartGroupName: smart-prod
    dependsOn: ['build', 'P01_Deploy_UKS']
    condition: succeeded()

variables:
  - group: subscription-common
  - group: environment-common
  - group: devops-pipeline-common
  - group: power-bi

pool:
  vmImage: '$(ubuntu-version)'

stages:
  - template: templates/stage/initialise-pipeline.yml@pipeline
    parameters:
      useGitVersion: true

  - stage: Build
    dependsOn: ['Initialise_Pipeline']

    jobs:
      - template: templates/job/adf-pipeline-pytest.yml@pipeline
        parameters:
          jobName: 'Pytest'
          runPytests: true
          pytestPath: '$(Build.SourcesDirectory)/azure_functions/support/tests/'
          pytestFilterMark: "dev and not serial"

      - template: templates/job/adf-pipeline-pytest.yml@pipeline
        parameters:
          dependsOn: ['Pytest']
          jobName: 'Pytest_serial'
          runPytests: true
          pytestPath: '$(Build.SourcesDirectory)/azure_functions/support/tests/'
          pytestFilterMark: "dev and serial"

      - template: templates/job/python-artifact.yml@pipeline
        parameters:
          dependsOn: ['Pytest']
          archivePath: 'azure_functions/support'
          artifactName: $(Build.BuildId).zip
          pipInstallTargetPath: '$(Build.SourcesDirectory)/azure_functions/support/.python_packages/lib/site-packages'
          pipRequirementsPath: '$(Build.SourcesDirectory)/azure_functions/support/requirements.txt'

  - ${{ each stage in parameters.deploymentStages }}:
    - stage: ${{ stage.name }}_Deploy_UKS
      dependsOn: ${{ stage.dependsOn }}
      condition: ${{ stage.condition }}
      variables:
        - group: subscription-${{ stage.subscription }}
        - group: region-uks
        - group: environment-${{ stage.coreEnv }}
        - group: adp-sub-core-infra-${{ stage.subscription }}-uks
        - group: adp-env-core-infra-${{ stage.coreEnv }}-uks
        - group: cherwell-${{ stage.subscription }}

      jobs:
        - template: templates/job/deploy-function.yml@pipeline
          parameters:
            azureSubscription: 'anchor-platform-${{ stage.subscription }}'
            appType: 'functionAppLinux'
            appName: 'test-utils-t01-fa'
            #appName: "adp-uks-env-${{ stage.coreEnv }}-support-utils-fapp"
            package: $(Build.BuildId).zip
